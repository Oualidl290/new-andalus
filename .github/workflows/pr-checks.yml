name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Skip checks for draft PRs
  check-draft:
    runs-on: ubuntu-latest
    outputs:
      is-draft: ${{ steps.check.outputs.is-draft }}
    steps:
      - name: Check if PR is draft
        id: check
        run: |
          if [ "${{ github.event.pull_request.draft }}" = "true" ]; then
            echo "is-draft=true" >> $GITHUB_OUTPUT
            echo "⚠️ Skipping checks for draft PR"
          else
            echo "is-draft=false" >> $GITHUB_OUTPUT
          fi

  # Code quality checks
  lint-and-format:
    needs: check-draft
    if: needs.check-draft.outputs.is-draft == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Type checking
        run: npm run type-check

  # Security checks
  security-scan:
    needs: check-draft
    if: needs.check-draft.outputs.is-draft == 'false'
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run dependency audit
        run: npm audit --audit-level=moderate

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Test suite
  test:
    needs: check-draft
    if: needs.check-draft.outputs.is-draft == 'false'
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: new_andalus_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:run
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/new_andalus_test
          REDIS_URL: redis://localhost:6379
          NODE_ENV: test

      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # Docker build test
  docker-build:
    needs: check-draft
    if: needs.check-draft.outputs.is-draft == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: new-andalus:pr-${{ github.event.number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # PR size check
  pr-size-check:
    needs: check-draft
    if: needs.check-draft.outputs.is-draft == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Check PR size
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            
            const additions = pr.additions;
            const deletions = pr.deletions;
            const changedFiles = pr.changed_files;
            
            console.log(`PR Stats: +${additions} -${deletions} files: ${changedFiles}`);
            
            // Warn for large PRs
            if (additions > 1000 || changedFiles > 50) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `⚠️ **Large PR Warning**
                
This PR is quite large (+${additions} -${deletions} lines, ${changedFiles} files). 
Consider breaking it down into smaller, focused PRs for easier review.

**Guidelines:**
- Keep PRs under 500 lines when possible
- Focus on a single feature or fix per PR
- Use draft PRs for work-in-progress`
              });
            }

  # All checks status
  all-checks:
    needs: [lint-and-format, security-scan, test, docker-build, pr-size-check]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.lint-and-format.result }}" == "success" && 
                "${{ needs.security-scan.result }}" == "success" && 
                "${{ needs.test.result }}" == "success" && 
                "${{ needs.docker-build.result }}" == "success" && 
                "${{ needs.pr-size-check.result }}" == "success" ]]; then
            echo "✅ All checks passed!"
            exit 0
          else
            echo "❌ Some checks failed"
            exit 1
          fi